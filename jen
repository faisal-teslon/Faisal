pipeline {
   environment {
     GITHUB_TOKEN = credentials('github-token')
     projectRepo = "teslontechnologies/carenation-patient-app"
     dockerImageTag = "vestige"
     dockerRegistryCredential = 'Docker-Hub-Credentials'
     BUILDER_NAME='mybuilder'
   }
   agent any
   stages {
     stage('Checkout') {
       steps {
          checkout scm
        }
     }
     stage('Build') {
        steps {
          sh 'yarn install'
          sh 'yarn run build:app'
        }
     }
     stage('Docker build, push multi-arch image and cleanup') {
       steps{
          script {
             docker.withRegistry('', dockerRegistryCredential ) {
               sh 'docker run --rm --privileged docker/binfmt:66f9012c56a8316f9244ffd7622d7c21c1f6f28d'
               sh 'docker buildx create --name $BUILDER_NAME --use'
               sh 'docker buildx inspect --bootstrap'
               sh 'docker buildx ls'
               sh 'docker buildx build --platform linux/amd64,linux/arm64 -t $projectRepo:$dockerImageTag --push .'
               sh 'docker buildx use default'
               sh 'docker buildx rm $BUILDER_NAME'
               sh 'docker buildx ls'
             }
           }
       }
     }
   }
 }
